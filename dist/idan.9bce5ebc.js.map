{"mappings":"AAAA,IAAI,SAAS,EAAE;AACf,IAAI,eAAe;AACnB,IAAI,cAAc;AAElB,IAAI,mBAAmB;AAEvB,SAAS;IACP,IAAK,IAAI,IAAI,GAAG,IAAI,aAAa,IAAK;QACpC,IAAI,YAAY,sBAAuB,CAAA,IAAI,CAAA,IAAK;QAChD,IAAI,MAAM,UAAU;QACpB,OAAO,KAAK;IACd;AACF;AAEA,SAAS;IACP,qEAAqE;IACtE,aAAa,aAAa;IACzB,aAAa;IACb;IACA,UAAU;IACX,KAAK;IACL,KAAK,GAAG,GAAG,OAAO;AACnB;AAEA,SAAS;IACR,MAAM,CAAC,aAAa,CAAC,OAAO,OAAO;IAClC,MAAM,CAAC,aAAa,CAAC;IAErB,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,KAAK,iBAC9B,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,KAAK,iBAAkB;QACpD,qBAAqB;QACrB,IAAI,OAAO,GAAE,MAAM,GAClB;QAGE,IAAI,IAAI,AAAC,CAAA,IAAI,IAAI,KAAI,IAAK;QAC1B,IAAI,IAAI,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,EAAE;QAC1C,IAAI,IAAI,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,EAAE;QAC1C,IAAI,IAAI,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,EAAE;QAC1C,IAAI,IAAI,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,EAAE;QAE1C,KAAK,GAAG,GAAG,GAAG;QACd,OAAO,GAAG,GAAG;IACf;IAGF;IACA,IAAI,gBAAgB,aAClB,eAAe;AAEnB","sources":["sketches/idan/mySketch.js"],"sourcesContent":["let images = [];\nlet currentImage = 0;\nlet totalImages = 60;\n\nlet pixelation_level = 35;\n\nfunction preload() {\n  for (let i = 0; i < totalImages; i++) {\n    let imageName = \"pixelated image (\" + (i + 1) + \").jpg\";\n    let img = loadImage(imageName);\n    images.push(img);\n  }\n}\n\nfunction setup() {\n  //createCanvas(round(windowHeight / 1.5), round(windowHeight / 1.5));\n\tcreateCanvas(windowWidth, windowHeight);\n  pixelDensity(1);\n  noStroke();\n  frameRate(2);\n\tfill(0);\n\trect(0, 0, width, height);\n}\n\nfunction draw() {\n\timages[currentImage].resize(width, height);\n  images[currentImage].loadPixels();\n\t\n  for (let x = 0; x < width; x += pixelation_level) {\n    for (let y = 0; y < height; y += pixelation_level) {\n\t\t\t//noiseSeed += 0.01;\t\n\t\t\tif (random(0,10) > 1) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n      let i = (x + y * width) * 4;\n      let r = images[currentImage].pixels[i + 0];\n      let g = images[currentImage].pixels[i + 1];\n      let b = images[currentImage].pixels[i + 2];\n      let a = images[currentImage].pixels[i + 3];\n\n      fill(r, g, b, a);\n      square(x, y, pixelation_level);\n    }\n  }\n\n  currentImage++;\n  if (currentImage >= totalImages) {\n    currentImage = 0;\n  }\n}\n"],"names":[],"version":3,"file":"idan.9bce5ebc.js.map","sourceRoot":"/__parcel_source_root/"}