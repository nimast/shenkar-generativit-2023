{"mappings":"ACCuB,MAAM,GAAG,IAAA,CAAK,CAAA","sources":["<anon>","sketches/tom/mySketch.js"],"sourcesContent":["let squareSize;\nlet squareStates = new Array(9).fill(false);\nlet emotions = [\n    \"Happy\",\n    \"Sad\",\n    \"Creative\",\n    \"Angry\",\n    \"Excited\",\n    \"Scared\",\n    \"Peaceful\",\n    \"Anxious\",\n    \"Inspired\"\n];\nlet palettes = [\n    [\n        \"#FFD700\",\n        \"#FFA500\",\n        \"#FF4500\",\n        \"#FF6347\",\n        \"#FF7F50\"\n    ],\n    [\n        \"#555555\",\n        \"#444444\",\n        \"#333333\",\n        \"#222222\",\n        \"#111111\"\n    ],\n    [\n        \"#7FDBFF\",\n        \"#0074D9\",\n        \"#001f3f\",\n        \"#39CCCC\",\n        \"#3D9970\"\n    ],\n    [\n        \"#FF4136\",\n        \"#85144b\",\n        \"#B10DC9\",\n        \"#F012BE\",\n        \"#FF4136\"\n    ],\n    [\n        \"#01FF70\",\n        \"#2ECC40\",\n        \"#FFDC00\",\n        \"#FF851B\",\n        \"#FF4136\"\n    ],\n    [\n        \"#AAAAAA\",\n        \"#999999\",\n        \"#888888\",\n        \"#777777\",\n        \"#666666\"\n    ],\n    [\n        \"#DDDDDD\",\n        \"#CCCCCC\",\n        \"#BBBBBB\",\n        \"#AAAAAA\",\n        \"#999999\"\n    ],\n    [\n        \"#B10DC9\",\n        \"#85144b\",\n        \"#FF4136\",\n        \"#FF851B\",\n        \"#FF4136\"\n    ],\n    [\n        \"#39CCCC\",\n        \"#7FDBFF\",\n        \"#01FF70\",\n        \"#2ECC40\",\n        \"#FFDC00\"\n    ]\n];\nlet video;\nfunction setup() {\n    createCanvas(800, 800);\n    frameRate(30);\n    squareSize = width / 3;\n    let title = createP(\"How Are You Feeling Today?\");\n    title.style(\"font-size\", \"24px\"); // Change the font size as needed\n    // left align the text title.style('text-align', 'left'); \n    title.style(\"display\", \"block\"); // Make sure the paragraph is a block-level element\n    title.style(\"width\", \"100%\"); // Take the full width of its container\n    video = createCapture(VIDEO);\n    video.size(width, squareSize);\n    // Style the video DOM element to position above canvas\n    video.style(\"width\", `${squareSize}px`);\n    video.style(\"height\", `${squareSize}px`);\n    video.style(\"position\", \"absolute\");\n    video.style(\"left\", \"120px\");\n    video.style(\"top\", \"100px\");\n    let canvas = select(\"canvas\");\n    canvas.style(\"display\", \"block\");\n    canvas.style(\"width\", \"100%\");\n    canvas.style(\"position\", \"relative\");\n    canvas.style(\"left\", \"450px\");\n    canvas.style(\"top\", \"0px\");\n}\nfunction displayVideo() {\n    // Draw the video at the left of the canvas\n    image(video, 0, 0, squareSize, height);\n// filter(BLUR, 3);\n}\nfunction draw() {\n    displayVideo();\n    background(220);\n    for(let i = 0; i < 9; i++){\n        let x = i % 3 * squareSize;\n        let y = floor(i / 3) * squareSize;\n        if (squareStates[i]) displayPalette(palettes[i], x, y);\n        else displaySquare(x, y, i);\n    }\n    drawTitles();\n}\nfunction displaySquare(x, y, i) {\n    let colorIndex = floor(random(4)); // Generate a random color for each square\n    let squareColor = palettes[i][colorIndex];\n    fill(squareColor);\n    rect(x, y, squareSize, squareSize);\n}\nfunction displayPalette(palette, x, y) {\n    let paletteSize = squareSize / palette.length;\n    for(let i = 0; i < palette.length; i++){\n        fill(palette[i]);\n        rect(x, y + i * paletteSize, squareSize, paletteSize);\n    }\n}\nfunction drawTitles() {\n    textSize(20);\n    textAlign(CENTER, CENTER);\n    fill(0);\n    for(let i = 0; i < 9; i++){\n        let x = (i % 3 + 0.5) * squareSize;\n        let y = (floor(i / 3) + 0.5) * squareSize;\n        text(emotions[i], x, y);\n    }\n}\nfunction mouseMoved() {\n    for(let i = 0; i < 9; i++){\n        let x = i % 3 * squareSize;\n        let y = floor(i / 3) * squareSize;\n        if (mouseX >= x && mouseX <= x + squareSize && mouseY >= y && mouseY <= y + squareSize) squareStates[i] = true;\n        else squareStates[i] = false;\n    }\n}\n\n//# sourceMappingURL=tom.f38b7529.js.map\n","let squareSize;\nlet squareStates = new Array(9).fill(false);\nlet emotions = [\"Happy\", \"Sad\", \"Creative\", \"Angry\", \"Excited\", \"Scared\", \"Peaceful\", \"Anxious\", \"Inspired\"];\nlet palettes = [\n  [\"#FFD700\", \"#FFA500\", \"#FF4500\", \"#FF6347\", \"#FF7F50\"], // Happy\n  [\"#555555\", \"#444444\", \"#333333\", \"#222222\", \"#111111\"], // Sad\n  [\"#7FDBFF\", \"#0074D9\", \"#001f3f\", \"#39CCCC\", \"#3D9970\"], // Creative\n  [\"#FF4136\", \"#85144b\", \"#B10DC9\", \"#F012BE\", \"#FF4136\"], // Angry\n  [\"#01FF70\", \"#2ECC40\", \"#FFDC00\", \"#FF851B\", \"#FF4136\"], // Excited\n  [\"#AAAAAA\", \"#999999\", \"#888888\", \"#777777\", \"#666666\"], // Scared\n  [\"#DDDDDD\", \"#CCCCCC\", \"#BBBBBB\", \"#AAAAAA\", \"#999999\"], // Peaceful\n  [\"#B10DC9\", \"#85144b\", \"#FF4136\", \"#FF851B\", \"#FF4136\"], // Anxious\n  [\"#39CCCC\", \"#7FDBFF\", \"#01FF70\", \"#2ECC40\", \"#FFDC00\"], // Inspired\n];\nlet video;\n\nfunction setup() {\n  createCanvas(800, 800);\n  frameRate(30);\n  squareSize = width / 3;\n  \n\tlet title = createP(\"How Are You Feeling Today?\");\n  title.style('font-size', '24px'); // Change the font size as needed\n  // left align the text title.style('text-align', 'left'); \n  title.style('display', 'block'); // Make sure the paragraph is a block-level element\n  title.style('width', '100%'); // Take the full width of its container\n\t\n  video = createCapture(VIDEO);\n  video.size(width, squareSize);\n  \n  // Style the video DOM element to position above canvas\n  video.style('width', `${squareSize}px`);\n  video.style('height', `${squareSize}px`);\n  video.style('position', 'absolute');\n  video.style('left', '120px');\n  video.style('top', '100px');\n\t\n\tlet canvas = select('canvas');\n  canvas.style('display', 'block');\n  canvas.style('width', '100%');\n  canvas.style('position', 'relative');\n  canvas.style('left', '450px');\n  canvas.style('top', '0px');\n}\n\n\nfunction displayVideo() {\n  // Draw the video at the left of the canvas\n  image(video, 0, 0, squareSize, height);\n\t// filter(BLUR, 3);\n}\n\nfunction draw() {\n\tdisplayVideo();\n  background(220);\n\n  for (let i = 0; i < 9; i++) {\n    let x = (i % 3) * squareSize;\n    let y = floor(i / 3) * squareSize;\n\n    if (squareStates[i]) {\n      displayPalette(palettes[i], x, y);\n    } else {\n      displaySquare(x, y, i);\n    }\n  }\n\n  drawTitles();\n}\n\nfunction displaySquare(x, y, i) {\n  let colorIndex = floor(random(4)); // Generate a random color for each square\n  let squareColor = palettes[i][colorIndex];\n\n  fill(squareColor);\n  rect(x, y, squareSize, squareSize);\n}\n\nfunction displayPalette(palette, x, y) {\n  let paletteSize = squareSize / palette.length;\n\n  for (let i = 0; i < palette.length; i++) {\n    fill(palette[i]);\n    rect(x, y + i * paletteSize, squareSize, paletteSize);\n  }\n}\n\nfunction drawTitles() {\n  textSize(20);\n  textAlign(CENTER, CENTER);\n\n  fill(0);\n  for (let i = 0; i < 9; i++) {\n    let x = ((i % 3) + 0.5) * squareSize;\n    let y = (floor(i / 3) + 0.5) * squareSize;\n    text(emotions[i], x, y);\n  }\n}\n\nfunction mouseMoved() {\n  for (let i = 0; i < 9; i++) {\n    let x = (i % 3) * squareSize;\n    let y = floor(i / 3) * squareSize;\n\n    if (mouseX >= x && mouseX <= x + squareSize && mouseY >= y && mouseY <= y + squareSize) {\n      squareStates[i] = true;\n    } else {\n      squareStates[i] = false;\n    }\n  }\n}"],"names":["Array","fill"],"version":3,"file":"tom.f38b7529.js.map"}