{"mappings":"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","sources":["sketches/nohav/mySketch.js"],"sourcesContent":["function setup() {\n  createCanvas(800, 800); \n}\n\nfunction draw() {\n  background(128, 128, 128); \n\n  // Cylinders in Blender assignment\n  let numCircles1 = 164;\n  let circleSize1 = width / 2 - 20;\n  let circleSpacing1 = TWO_PI / numCircles1;\n  for (let i = 0; i < numCircles1; i++) {\n    let angle = i * circleSpacing1;\n    let x = width / 2 + cos(angle) * circleSize1;\n    let y = height / 2 + sin(angle) * circleSize1;\n    fill(47,0,250); \n    stroke(0);\n    ellipse(x, y, 10, 10);\n  }\n//Cubes in Blender assignment\n  let numSquares = 140;\n  let squareSize = width / 2 - 50;\n  let squareSpacing = TWO_PI / numSquares;\n  for (let i = 0; i < numSquares; i++) {\n    let angle = i * squareSpacing;\n    let x = width / 2 + cos(angle) * squareSize;\n    let y = height / 2 + sin(angle) * squareSize;\n    fill(124, 0, 220); \n    stroke(0);\n    rect(x, y, 10, 10);\n  }\n//Seconds in the video\n  let numCircles2 = 86;\n  let circleSize2 = width / 2 - 80;\n  let circleSpacing2 = TWO_PI / numCircles2;\n  for (let i = 0; i < numCircles2; i++) {\n    let angle = i * circleSpacing2;\n    let x = width / 2 + cos(angle) * circleSize2;\n    let y = height / 2 + sin(angle) * circleSize2;\n    fill(156, 0, 189); \n    stroke(0);\n    ellipse(x, y, 10, 10);\n  }\n//Knocks on the wall in my performance art work\n  let numTriangles1 = 36;\n  let triangleSize1 = width / 2 - 110;\n  let triangleSpacing1 = TWO_PI / numTriangles1;\n  for (let i = 0; i < numTriangles1; i++) {\n    let angle = i * triangleSpacing1;\n    let x = width / 2 + cos(angle + triangleSpacing1/2) * triangleSize1;\n    let y = height / 2 + sin(angle + triangleSpacing1/2) * triangleSize1;\n    fill(175, 0, 160);\n    stroke(0);\n    triangle(x, y - 5, x - 5, y + 5, x + 5, y + 5);\n  }\n//Chords played by my brother Nave\n  let numCircles3 = 13;\n  let circleSize3 = width / 2 - 140;\n  let circleSpacing3 = TWO_PI / numCircles3;\n  for (let i = 0; i < numCircles3; i++) {\n    let angle = i * circleSpacing3;\n    let x = width / 2 + cos(angle) * circleSize3;\n    let y = height / 2 + sin(angle) * circleSize3;\n    fill(184, 0, 132); \n    stroke(0);\n    ellipse(x, y, 10, 10);\n  }\n//Brush strokes\n  let numSquares2 = 10;\n  let squareSize2 = width / 2 - 170;\n  let squareSpacing2 = TWO_PI / numSquares2;\n  for (let i = 0; i < numSquares2; i++) {\n    let angle = i * squareSpacing2;\n    let x = width / 2 + cos(angle) * squareSize2;\n    let y = height / 2 + sin(angle) * squareSize2;\n    fill(187, 0, 107);\n    stroke(0);\n    rect(x, y, 10, 10);\n  }\n//Lines made with pen\n  let numCircles4 = 7;\n  let circleSize4 = width / 2 - 200;\n  let circleSpacing4 = TWO_PI / numCircles4;\n  for (let i = 0; i < numCircles4; i++) {\n    let angle = i * circleSpacing4;\n    let x = width / 2 + cos(angle) * circleSize4;\n    let y = height / 2 + sin(angle) * circleSize4;\n    fill(185, 0, 85); \n    stroke(0);\n    ellipse(x, y, 10, 10);\n  }\n//Tappings on the computer\n  let numTriangles2 = 5;\n  let triangleSize2 = width / 2 - 230;\n  let triangleSpacing2 = TWO_PI / numTriangles2;\n  for (let i = 0; i < numTriangles2; i++) {\n    let angle = i * triangleSpacing2;\n    let x = width / 2 + cos(angle + triangleSpacing2/2) * triangleSize2;\n    let y = height / 2 + sin(angle + triangleSpacing2/2) * triangleSize2;\n    fill(180, 0, 66);\n    stroke(0);\n    triangle(x, y - 5, x - 5, y + 5, x + 5, y + 5);\n  }\n//Coherently Audible \"Say it!\" shouts from the crowd, at least in my ears\n  let numSquares3 = 6;\n  let squareSize3 = width / 2 - 260;\n  let squareSpacing3 = TWO_PI / numSquares3;\n  for (let i = 0; i < numSquares3; i++) {\n    let angle = i * squareSpacing3;\n    let x = width / 2 + cos(angle) * squareSize3;\n    let y = height / 2 + sin(angle) * squareSize3;\n    fill(172, 0, 50); \n    stroke(0);\n    rect(x, y, 10, 10);\n  }\n//different planes passed in the key turn, the pencil toss and Bilbo's jump\n  let numCircles5 = 6;\n  let circleSize5 = width / 2 - 300;\n  let circleSpacing5 = TWO_PI / numCircles5;\n  for (let i = 0; i < numCircles5; i++) {\n    let angle = i * circleSpacing5;\n    let x = width / 2 + cos(angle) * circleSize5;\n    let y = height / 2 + sin(angle) * circleSize5;\n    fill(162, 0, 37); \n    stroke(0);\n    ellipse(x, y, 10, 10);\n  }\n\n  \n  noStroke();\n  fill(151, 1, 26); \n  heart(width / 2, height / 2, 80);\n}\n\n// <3\nfunction heart(x, y, size) {\n  beginShape();\n  vertex(x, y);\n  bezierVertex(x - size/2, y - size/2, x - size, y + size/4, x, y + size);\n  bezierVertex(x + size, y + size/4, x + size/2, y - size/2, x, y);\n  endShape(CLOSE);\n}"],"names":[],"version":3,"file":"nohav.a5b50cae.js.map","sourceRoot":"/__parcel_source_root/"}